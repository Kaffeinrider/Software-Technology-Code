/*Database creation*/

DROP DATABASE IF EXISTS MyAccountant;
CREATE DATABASE MyAccountant;
USE MyAccountant;

/*Create Tables*/

DROP TABLE IF EXISTS user;
CREATE TABLE user (  
username VARCHAR(30) NOT NULL,
PRIMARY KEY (username)
) ;

DROP TABLE IF EXISTS logistis;
CREATE TABLE logistis (  
onoma_logisti VARCHAR(30) NOT NULL,
eponimo_logisti VARCHAR(30) NOT NULL,
afm_logisti CHAR(11) NOT NULL,
username_logisti VARCHAR(30) NOT NULL,
password_logisti VARCHAR(30) NOT NULL,
email_logisti VARCHAR(30) DEFAULT 'unknown',
PRIMARY KEY (username_logisti , afm_logisti),
CONSTRAINT Username_Logisti FOREIGN KEY (username_logisti) REFERENCES user(username) ON DELETE CASCADE ON UPDATE CASCADE
) ;

DROP TABLE IF EXISTS idiotis;
CREATE TABLE idiotis (  
onoma_idioti VARCHAR(30) NOT NULL,
eponimo_idioti VARCHAR(30) NOT NULL,
afm_idioti CHAR(11) NOT NULL,
username_idioti VARCHAR(30) NOT NULL,
password_idioti VARCHAR(30) NOT NULL,
email_idioti VARCHAR(30) DEFAULT 'unknown',
portofoli_idioti INT(20) DEFAULT 0,
idiotis_username_logisti VARCHAR(30),
PRIMARY KEY (username_idioti , afm_idioti),
CONSTRAINT Username_Idioti FOREIGN KEY (username_idioti) REFERENCES user(username) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT Idiotis_Username_Logisti FOREIGN KEY (idiotis_username_logisti) REFERENCES logistis(username_logisti) ON DELETE SET NULL ON UPDATE CASCADE
) ;

DROP TABLE IF EXISTS epixeirisi;
CREATE TABLE epixeirisi (  
onoma_epixeirisis VARCHAR(30) NOT NULL,
poli VARCHAR(30) NOT NULL,
dieuthinsi VARCHAR(30) NOT NULL,
afm_epixeirisis CHAR(11) NOT NULL,
username_epixeirisis VARCHAR(30) NOT NULL,
password_epixeirisis VARCHAR(30) NOT NULL,
email_epixeirisis VARCHAR(30) DEFAULT 'unknown',
portofoli_epixeirisis INT(20) DEFAULT 0,
epix_username_logisti VARCHAR(30),
esoda INT(20) DEFAULT 0,
exoda INT(20) DEFAULT 0,
PRIMARY KEY (username_epixeirisis , afm_epixeirisis),
CONSTRAINT Username_Epixeirisis FOREIGN KEY (username_epixeirisis) REFERENCES user(username) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT Epix_Username_Logisti FOREIGN KEY (epix_username_logisti) REFERENCES logistis(username_logisti) ON DELETE SET NULL ON UPDATE CASCADE
) ;

DROP TABLE IF EXISTS oxima;
CREATE TABLE oxima (  
ox_onoma VARCHAR(30) NOT NULL,
pinakida CHAR(7) NOT NULL,
kostos_telon INT(20) DEFAULT 0,
katastasi ENUM('ΕΝΕΡΓΟ' ,'ΑΚΙΝΗΣΙΑ'),
ox_username_pelati VARCHAR(30) NOT NULL,
PRIMARY KEY (pinakida),
CONSTRAINT Ox_Username_Pelati FOREIGN KEY (ox_username_pelati) REFERENCES user(username) ON DELETE CASCADE ON UPDATE CASCADE
) ;

DROP TABLE IF EXISTS aitima;
CREATE TABLE aitima (  
ait_id INT(20) NOT NULL AUTO_INCREMENT,
ait_username_pelati VARCHAR(30) NOT NULL,
eidos ENUM('ΑΙΤΗΜΑ ΦΟΡΟΛΟΓΙΚΗΣ ΔΗΛΩΣΗΣ' ,'ΑΙΤΗΜΑ ΕΚΚΑΘΑΡΙΣΤΙΚΟΥ' ,'ΑΙΤΗΜΑ ΕΝΗΜΕΡΩΣΗΣ ΕΠΙΧΕΙΡΙΣΗΣ' ,'ΑΙΤΗΜΑ ΕΝΗΜΕΡΩΣΗΣ ΟΦΕΙΛΗΣ' ,'ΑΙΤΗΜΑ ΕΝΗΜΕΡΩΣΗΣ ΟΧΗΜΑΤΩΝ' 
,'ΑΙΤΗΜΑ ΑΛΛΑΓΗΣ ΚΑΤΑΣΤΑΣΗΣ' ,'ΑΙΤΗΜΑ ΒΕΒΑΙΩΣΗΣ ΜΗ ΟΦΕΙΛΗΣ ΤΕΛΩΝ' ,'ΑΙΤΗΜΑ ΛΟΓΙΣΤΗ'),
poso_pliromis INT(20) DEFAULT 0,
ait_pinakida CHAR(7) DEFAULT 'empty',
ait_username_logisti VARCHAR(30) NOT NULL,
PRIMARY KEY (ait_id),
CONSTRAINT Ait_Username_Pelati FOREIGN KEY (ait_username_pelati) REFERENCES user(username) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT Ait_Pinakida FOREIGN KEY (ait_pinakida) REFERENCES oxima(pinakida) ON DELETE CASCADE ON UPDATE CASCADE
CONSTRAINT Ait_Username_Logisti FOREIGN KEY (ait_username_logisti) REFERENCES logistis(username_logisti) ON DELETE CASCADE ON UPDATE CASCADE
) ;

DROP TABLE IF EXISTS ypallilos;
CREATE TABLE ypallilos (  
yp_afm: CHAR(11)
yp_onoma: VARCHAR(30)
yp_eponimo: VARCHAR(30)
meikta: INT(20)
asfalisi: INT(20)
yp_username_epixeirisis: VARCHAR(30)




PRIMARY KEY (username_epixeirisis , afm_epixeirisis),
CONSTRAINT Username_Epixeirisis FOREIGN KEY (username_epixeirisis) REFERENCES user(username) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT Epix_Username_Logisti FOREIGN KEY (epix_username_logisti) REFERENCES logistis(username_logisti) ON DELETE SET NULL ON UPDATE CASCADE
) ;















