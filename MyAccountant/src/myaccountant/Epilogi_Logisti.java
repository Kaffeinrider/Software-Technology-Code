package myaccountant;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import static myaccountant.Login.*;
import javax.swing.table.DefaultTableModel;

public class Epilogi_Logisti extends javax.swing.JFrame {
    public Epilogi_Logisti() 
    {
        initComponents();
        load_Torino_Logisti();
        load_Logistes();
    }  
    
    private void load_Torino_Logisti()
    {
        String query = "";
        
        switch (user_type) 
        {
            case "epixeirisi":
                query = "SELECT onoma_logisti,eponimo_logisti FROM epixeirisi INNER JOIN logistis ON epix_username_logisti = username_logisti WHERE username_epixeirisis = ?";
                break;
            case "idiotis":
                query = "SELECT onoma_logisti,eponimo_logisti FROM idiotis INNER JOIN logistis ON idiotis_username_logisti = username_logisti WHERE username_idioti = ?";
                break;
            default:
                break;
        }
        
        try 
        {
            PreparedStatement pst = conn.prepareStatement(query);
            
            pst.setString(1, username); 
            
            ResultSet rs = pst.executeQuery();
            
            if(rs.next())
            {
                String onoma_torinou = rs.getString(1);
                String eponimo_torinou = rs.getString(2);
                
                String onomateponimo_torinou = onoma_torinou + " " + eponimo_torinou;
                
                jLabel4.setText(onomateponimo_torinou);
            }
            else
            {
                jLabel4.setText("");
            }
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
    }
    
    private void load_Logistes()
    {
        String query = "";
        
        switch (user_type) 
        {
            case "epixeirisi":
                query = "SELECT onoma_logisti,eponimo_logisti,username_logisti,email_logisti FROM logistis LEFT JOIN epixeirisi ON username_logisti = epix_username_logisti AND username_epixeirisis = ? WHERE username_epixeirisis IS NULL";
                break;
            case "idiotis":
                query = "SELECT onoma_logisti,eponimo_logisti,username_logisti,email_logisti FROM logistis LEFT JOIN idiotis ON username_logisti = idiotis_username_logisti AND username_idioti = ? WHERE username_idioti IS NULL";
                break;
            default:
                break;
        }

        try 
        {
            PreparedStatement pst = conn.prepareStatement(query);
            
            pst.setString(1, username); 
            
            ResultSet rs = pst.executeQuery();
            
            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            
            tblModel.setRowCount(0); 
            
            while(rs.next())
            {
                String onoma = rs.getString("onoma_logisti");
                String eponimo = rs.getString("eponimo_logisti");
                String uname_logisti = rs.getString("username_logisti");
                String email = String.valueOf(rs.getString("email_logisti"));
          
                String tbData[] = {onoma , eponimo, uname_logisti, email};
          
                tblModel.addRow(tbData); 
            }
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        jLabel1.setText("Επιλογή Λογιστή");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Όνομα Λογιστή", "Επώνυμο Λογιστή", "Username", "Email"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Αίτημα Νέου Λογιστή:");

        jButton8.setBackground(new java.awt.Color(255, 0, 0));
        jButton8.setText("Επιστροφή");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(255, 0, 0));
        jButton9.setText("Τερματισμός τωρινού Λογιστή");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Τωρινός Λογιστής:");

        jButton6.setBackground(new java.awt.Color(0, 153, 255));
        jButton6.setText("Υποβολή Αιτήματος");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton6)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addGap(87, 87, 87))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(44, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String query = "";
        
        switch (user_type) 
        {
            case "epixeirisi":
                query = "UPDATE epixeirisi SET epix_username_logisti = NULL WHERE username_epixeirisis = ?";
                break;
            case "idiotis":
                query = "UPDATE idiotis SET idiotis_username_logisti = NULL WHERE username_idioti = ?";
                break;
            default:
                break;
        }
        
        try 
        {
            PreparedStatement pst = conn.prepareStatement(query);
            
            pst.setString(1, username); 
            
            pst.executeUpdate(); 
            
            load_Torino_Logisti();
            load_Logistes();
            
            JOptionPane.showMessageDialog(this, "Accountant was terminated!", "Update", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error updating wallet: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }      
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int selectedRowIndex = jTable1.getSelectedRow();
        
        if (selectedRowIndex == -1) 
        {
            JOptionPane.showMessageDialog(this, "Δεν έχετε επιλέξει λογιστή!", "Error", JOptionPane.ERROR_MESSAGE);
            
            return;
        }

        DefaultTableModel tmodel1 = (DefaultTableModel) jTable1.getModel();
              
        String username_logisti = tmodel1.getValueAt(selectedRowIndex, 2).toString();
        String username_pelati = username;
        String eidos_aitimatos = "AITIMA LOGISTI";
        
        String checkQuery = "SELECT ait_username_logisti FROM aitima WHERE ait_username_pelati = ? AND eidos = ?";
        
        try 
        {
            PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
            
            checkStmt.setString(1, username_pelati);
            checkStmt.setString(2, eidos_aitimatos);
            
            ResultSet rs = checkStmt.executeQuery();
            
            if (rs.next()) 
            {
                JOptionPane.showMessageDialog(this, "Έχετε ήδη κάνει αίτημα για λογιστή!", "Error", JOptionPane.ERROR_MESSAGE);
                return; 
            }
        } 
        catch (SQLException e) 
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Σφάλμα κατά τον έλεγχο των αιτημάτων: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String query = "INSERT INTO aitima VALUES (NULL, ?, ?, DEFAULT, NULL, ?)";
 
        try 
        {
            PreparedStatement pstmt = conn.prepareStatement(query);
            
            pstmt.setString(1, username_pelati);
            pstmt.setString(2, eidos_aitimatos);
            pstmt.setString(3, username_logisti);
            
            pstmt.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Το αίτημα στάλθηκε!", "Update", JOptionPane.INFORMATION_MESSAGE);
        } 
        catch (SQLException e) 
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Σφάλμα κατά την εισαγωγή στη βάση δεδομένων: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(user_type.equals("epixeirisi"))
        {
            this.dispose();
            
            Epixeirisi epixeirisi = new Epixeirisi();
            //center the window
            epixeirisi.setLocationRelativeTo(null);
            // Show the login window
            epixeirisi.setVisible(true);
        }
        else
        {
            this.dispose();
            
            Idiotis idiotis = new Idiotis();
            //center the window
            idiotis.setLocationRelativeTo(null);
            // Show the login window
            idiotis.setVisible(true);
        }      
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Epilogi_Logisti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Epilogi_Logisti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Epilogi_Logisti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Epilogi_Logisti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Epilogi_Logisti().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
